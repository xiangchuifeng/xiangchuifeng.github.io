[
  
  {
    "title": "js设计模式-享元模式",
    "url": "/posts/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/",
    "categories": "js设计模式理解",
    "tags": "js基础知识",
    "date": "2023-06-13 11:17:00 +0800",
    





    
    "snippet": "享元模式  “享元”,被共享的单元,即复用对象,节省内存,注意前提是享元对象是不可变对象。  用一天的时间，抽空看完一种设计模式，或者两天，还是有收获的，我们需要耐心，这个从长远来说，不算慢的。个人感觉这个享元模式，初步看上去，大概可以理解为一种写代码的良好习惯，性能优化、去掉冗余，在代码开发时候，要避免影响性能的不良习惯。简单概括就是 dom 创建加载，变量，缓存，代码重用 等等能节省代码...",
    "content": "享元模式  “享元”,被共享的单元,即复用对象,节省内存,注意前提是享元对象是不可变对象。  用一天的时间，抽空看完一种设计模式，或者两天，还是有收获的，我们需要耐心，这个从长远来说，不算慢的。个人感觉这个享元模式，初步看上去，大概可以理解为一种写代码的良好习惯，性能优化、去掉冗余，在代码开发时候，要避免影响性能的不良习惯。简单概括就是 dom 创建加载，变量，缓存，代码重用 等等能节省代码执行开支的地方就去优化，去节省。在编程语言中共有的的理念即：抽离，封装，继承，多态，享元模式也蕴藏了此理念。享元模式的基本概念：享元是一种结构型设计模式，它允许你在消耗少量内存的情况下支持大量对象。模式通过共享多个对象的部分状态来实现上述功能。换句话来说，享元会将不同对象的相同数据进行缓存以节省内存用一个简单的例子，我们看一下，找找感觉，这个设计模式 很基础，甚至感觉是一种开发理念。// 未经优化的 tooltip 类let Tooltip = function (targetElement, text) {  this.target = targetElement;  this.text = text;  this.delayTimeout = null;  this.delay = 1500;  // create the HTML  this.element = document.createElement(\"div\");  this.element.style.display = \"none\";  this.element.style.position = \"absolute\";  this.element.className = \"tooltip\";  document.getElementsByTagName(\"body\")[0].appendChild(this.element);  // attach the event  var that = this;  addEvent(this.target, \"mouseover\", function (e) {    that.startDelay(e);  });  addEvent(this.target, \"mouseout\", function (e) {    that.hide();  });};Tooltip.prototype = {  startDelay: function (e) {    if (this.delayTimeout == null) {      let that = this;      let x = e.clientX;      let y = e.clientY;      this.delayTimeout = setTimeout(function () {        this.show();      }, this.delay);    }  },  show: function (x, y) {    clearTimeout(this.delayTimeout);    this.delayTimeout = null;    this.element.style.left = x + \"px\";    this.element.style.top = y + 20 + \"px\";    this.element.style.display = \"block\";  },  hide: function () {    clearTimeout(this.delayTimeout);    this.delayTimeout = null;    this.element.style.display = \"none\";  }};  上述的这段代码，意味着，我们每每使用到一个提示，就需要创建一个提示 dom 元素，那一个项目操作下来，多少个都有可能，几百几千个的话，是不是会有点崩溃的，性能会很差，浏览器开销会很大。从良好的开发习惯上来讲，这个肯定要优化的，要把示例抽离，只创建一个 提示 dom,在需要的时候，控制展示不同的内容就好了。所以基础单元，要和数据单元进行分离。在实际应用中，这个唯一创建的提示 dom 这个逻辑，这个行为，就是享元，共享单元。 而我们需要用的动态数据变量，需要抽离出来单独处理，平常代码开发，我们经常提到的，代码功能独立性，就像积木，就像电子元器件，开发思想的重要性。下面我们看一下，设计模式-享元模式对上面这段案例的处理：// managerlet TooltipManager = (function () {  let storeInstance = null;  let Tooltip = function () {    this.delayTimeout = null;    this.delay = 1500;    // create the HTML    this.element = document.createElement(\"div\");    this.element.style.display = \"none\";    this.element.style.position = \"absolute\";    this.element.className = \"tooltip\";    document.getElementsByTagName(\"body\")[0].appendChild(this.element);  };  Tooltip.prototype = {    startDelay: function (e) {      if (this.delayTimeout == null) {        let that = this;        let x = e.clientX;        let y = e.clientY;        this.delayTimeout = setTimeout(function () {          this.show(x, y, text);        }, this.delay);      }    },    show: function (x, y, text) {      clearTimeout(this.delayTimeout);      this.delayTimeout = null;      this.element.innerHTML = text;      this.element.style.left = x + \"px\";      this.element.style.top = y + 20 + \"px\";      this.element.style.display = \"block\";    },    hide: function () {      clearTimeout(this.delayTimeout);      this.delayTimeout = null;      this.element.style.display = \"none\";    }  };  return {    addTooltip: function (targetElement, text) {      let tt = this.getTooltip();      addEvent(targetElement, \"mouseover\", function (e) {        tt.startDelay(e, text);      });      addEvent(targetElement, \"mouseout\", function (e) {        tt.hide();      });    },    getTooltip: function () {      if (storeInstance == null) {        storeInstance = new Tooltip();      }      return storeInstance;    }  };})();上面这个Tooltip类和未处理前做一个对比，去进一步了解享元模式。"
  },
  
  {
    "title": "前端常用的地图框架",
    "url": "/posts/%E5%89%8D%E7%AB%AF%E5%B8%B8%E7%94%A8%E7%9A%84%E5%9C%B0%E5%9B%BE%E6%A1%86%E6%9E%B6/",
    "categories": "gis地图相关",
    "tags": "gis",
    "date": "2023-06-11 01:04:00 +0800",
    





    
    "snippet": "前端常用的地图框架（webGIS）      LeafletLeaflet 是最著名的前端地图可视化库，它开源、体积小、结构清晰、简单易用。        Mapbox GL JSMapbox GL JS 是目前最新潮的前端地图库，它的矢量压缩、动态样式和三维性能令人印象深刻。它本身是开源的，但一般依赖于Mapbox公司提供的底图服务。        ArcGIS API for JSArc...",
    "content": "前端常用的地图框架（webGIS）      LeafletLeaflet 是最著名的前端地图可视化库，它开源、体积小、结构清晰、简单易用。        Mapbox GL JSMapbox GL JS 是目前最新潮的前端地图库，它的矢量压缩、动态样式和三维性能令人印象深刻。它本身是开源的，但一般依赖于Mapbox公司提供的底图服务。        ArcGIS API for JSArcGIS API for JS 是较为学院派的前端地图库，它是ArcGIS开发套件中的一部分，和桌面端和服务器端ArcGIS软件有较好的协作。它不开源且收费不低，在学术场景下较为常用。        OpenlayersOpenlayers 也是常用的前端地图库，它开源，相比于Leaflet更加复杂和完备。        CesiumCesium 是三维地理可视化的常用库，在大尺度的可视化（地形、建筑、地球）中十分常用。        百度地图 JS API /百度地图 API GL百度地图 JS API 是传统的二维地图，百度地图 API GL 是三维地图，它们依赖百度地图提供的后台服务。除了地图服务外还有检索、导航、实时交通等关联服务。开发者有免费的限额。        高德地图 JS API高德地图 JS API 与百度类似。        Google Maps JS API谷歌地图 JS API 在境外有更好的数据。        AntV L7AntV L7 是空间数据可视化库，它可以使用高德地图等协作构建地图可视化。        Mapbox.jsMapbox.js 是 Leaflet 的一个扩展插件（与 Mapbox GL JS 不同）。  "
  },
  
  {
    "title": "AIGC的概念，和chatgpt有什么关联？",
    "url": "/posts/AIGC%E7%9A%84%E6%A6%82%E5%BF%B5-%E5%92%8Cchatgpt%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E8%81%94/",
    "categories": "技术前沿, AIGC, ChatGpt",
    "tags": "AIGC",
    "date": "2023-06-06 09:47:00 +0800",
    





    
    "snippet": "AIGC 和 ChatGPT 是两个不同的概念，但是有一定的联系和关联.AIGC 是 AI Generate Content 的意思，意味着人工智能生成的内容。AIGC 是一种利用人工智能技术自动化地生成各种类型的内容的方式，例如文本、音频、图像、视频等。  AIGC 可以应用在多个领域和场景，例如网络营销、品牌宣传、产品介绍、自动化客服、自动化翻译、自动化作曲等等  AIGC 的优点是可以...",
    "content": "AIGC 和 ChatGPT 是两个不同的概念，但是有一定的联系和关联.AIGC 是 AI Generate Content 的意思，意味着人工智能生成的内容。AIGC 是一种利用人工智能技术自动化地生成各种类型的内容的方式，例如文本、音频、图像、视频等。  AIGC 可以应用在多个领域和场景，例如网络营销、品牌宣传、产品介绍、自动化客服、自动化翻译、自动化作曲等等  AIGC 的优点是可以大量且快速地生成高质量的内容，节省时间和人力，提高效率和精确度  AIGC 智能生成的图片，体现了一种科学美，技术美不过，它也有一些缺点，首先比较明显的是，它会不会带来创作内容的产权问题，图片内容的产权问题等，其次，它生成的内容可能会比较缺少人情味，缺少一些灵动美。下面可以概览一些 AIGC 图片：一艘游轮行驶在波涛汹涌的陆地上 彩色斑斓朦胧未来的空间站程序员粉红色的独角兽 和月亮一起💈💈💈💈💈💈💈ChatGPT 是由 OpenAI 开发的一种基于 Transformer 的语言模型，–可以进行语言理解和生成，提供更接近人类和高效的沟通和表达方式ChatGPT 可以在各种情境下进行应用，例如网络聊天、语音助理、自然语言处理等等它可以不断的学习和进化，丰富自己的内容储量，生成更接近人类需要的内容，就像一个学习成长的小孩，ChatGPT 是 AIGC 的一种具体的应用和产品，属于文本生成的范畴ChatGPT 的优点是可以生成流畅且有逻辑的文本，可以与用户进行自然且有趣的对话，可以优化负面结果，例如提问“如何闯空门”，机器会回答“这并不合适”。ChatGPT 的缺点和上面 AIGC 的有部分类似，可能生成内容还比较生硬，比较举例化，不能应用于实际项目。或者生成不正确或不合适的文本，需要人类反馈来强化学习，还需要不断的学习融合。      AIGC 是一个广泛的概念，包括多种类型的内容生成；ChatGPT 是一个具体的产品，只涉及文本生成。        AIGC 可以应用在多个领域和场景；ChatGPT 主要应用在语言相关的领域和场景。        AIGC 可能需要不同的技术和模型来实现；ChatGPT 使用了 Transformer 作为核心技术和模型  "
  },
  
  {
    "title": "naive-ui中Anchor点击侧边栏锚点时候却跳转新页面的解决",
    "url": "/posts/naive-ui%E4%B8%ADAnchor%E7%82%B9%E5%87%BB%E9%94%9A%E7%82%B9%E6%97%B6%E5%80%99%E5%8D%B4%E8%B7%B3%E8%BD%AC%E6%96%B0%E9%A1%B5%E9%9D%A2%E7%9A%84%E8%A7%A3%E5%86%B3/",
    "categories": "ui组件库问题解决, naive-ui",
    "tags": "ui组件库问题",
    "date": "2023-05-22 10:26:00 +0800",
    





    
    "snippet": "naive-ui中Anchor点击侧边栏导航锚点跳转，却是新页面的问题；最近开发过程用 有使用锚点定位跳转的功能，于是使用了naive-ui的Anchor组件，组件demo代码 套用到项目上的时候，右侧内容滚动时候，侧边栏的锚点会自动高亮，这个是没有问题的，然后问题来了，点击左边锚点时候，右边的页面不会定向到对应位置，而是跳转了新页面，因为vue-router路由模式把锚点定位理解成了新页面...",
    "content": "naive-ui中Anchor点击侧边栏导航锚点跳转，却是新页面的问题；最近开发过程用 有使用锚点定位跳转的功能，于是使用了naive-ui的Anchor组件，组件demo代码 套用到项目上的时候，右侧内容滚动时候，侧边栏的锚点会自动高亮，这个是没有问题的，然后问题来了，点击左边锚点时候，右边的页面不会定向到对应位置，而是跳转了新页面，因为vue-router路由模式把锚点定位理解成了新页面的跳转。再回头看了一下 naive-ui组件说明，它是提供的有组件方法的，scrollTo,但是点击事件直接是默认的组件里面的a链接跳转，跳珠到了新页面。终于在思考了片刻之后，想到组件上使用点击事件加vue指令的修饰符应该是可以解决的。于是最终解决方案如下：&lt;n-anchor  ref=\"anchorRef\"  :show-rail=\"showRail\"  :show-background=\"showBackground\"  :bound=\"0\"  :offset-target=\"'.inner_page_bg.portrait .right'\"&gt;  &lt;n-anchor-link    v-for=\"(item, i) in anchorList\"    :title=\"item.split('-')[0]\"    :href=\"'#d' + (i + 1)\"    :class=\"item.split('-')[1] == 'later' ? 'disable_anchor' : ''\"    @click.capture.prevent=\"item.split('-')[1] == 'later' ? scrollTo(i + 1) : ''\"  /&gt;&lt;/n-anchor&gt;使用修饰符 capture设置捕获模式，prevent禁止捕获，最终点击事件止步于组件的外壳上，然后传参，使用scrollTo 滚动调位到对应的锚点@click.capture.prevent=”item.split(‘-‘)[1] == ‘later’ ? scrollTo(i + 1) : ‘’” const anchorRef = ref(null);  const scrollTo = (num) =&gt; {    anchorRef.value?.scrollTo(\"#d\" + num);  };那么这个问题就解决了,"
  },
  
  {
    "title": "js设计模式-方法的链式调用",
    "url": "/posts/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%96%B9%E6%B3%95%E7%9A%84%E9%93%BE%E5%BC%8F%E8%B0%83%E7%94%A8/",
    "categories": "js设计模式理解",
    "tags": "js基础知识",
    "date": "2023-05-12 17:02:00 +0800",
    





    
    "snippet": "链式调用链式调用是简单来讲就是 一个对象/主体 调用的方法，可以返回主体本身，可以接着去访问主体的下一个方法或者操作 ,它是一种语法招数。  用一天的时间，抽空看完一种设计模式，或者两天，还是有收获的，我们需要耐心，这个从长远来说，不算慢的。// 大概这个意思function b(dataIn) {  // ...  return dataIn;}链式调用可以让代码的可读性更好，代码结构更清...",
    "content": "链式调用链式调用是简单来讲就是 一个对象/主体 调用的方法，可以返回主体本身，可以接着去访问主体的下一个方法或者操作 ,它是一种语法招数。  用一天的时间，抽空看完一种设计模式，或者两天，还是有收获的，我们需要耐心，这个从长远来说，不算慢的。// 大概这个意思function b(dataIn) {  // ...  return dataIn;}链式调用可以让代码的可读性更好，代码结构更清晰，易读， 减少了代码量。如下所示对比：  baby.read();  baby.write();  baby.eatFood();  baby.sleep();  baby.read().write().eatFood().sleep()......a.b().c()比如我们以前用的 jquery.js,就是用的链式调用。$(\"div\").mouseover(function () {  $(this).css(\"color\", \"red\");});jquery 中的 $(‘element’)实现代码如下：function $(){  var elements = [];  for(var i=0;len=arguments.length;i&lt;len;++i){    var element = arguments[i];    if(typeof element==='string'){      element = document.getElementById(element)    }    if(arguments.lenth==1){      return element;    }    elements.push(element);  }  return elements;}$('element').each = function(){  // xxxx  return this;}那么，我们 jquery 中的 方法，show,each 等方法，也是在其构造器内实现的(function(){  function _$(els){    var elements = [];    for(var i=0;len=arguments.length;i&lt;len;++i){      var element = arguments[i];      if(typeof element==='string'){        element = document.getElementById(element)      }      if(arguments.lenth==1){        return element;      }      elements.push(element);    }    return elements;  }  _$.prototype = {    show:function(){      vat that = this;      this.each(function(el){      that.setStyle('display','block')      })      return this;    },    each:function(fn){      for(var i=0;len = this.elements.length;i&lt;len;i++){        fn.call(this,this.elements[i]);      }      return this;    },    setStyle:function(prop,val){      this.each(function(el){        el.style[prop] = val;      })      return this;    }  }  window.$ = function(){    return new _$(arguments)  }})()以上就是链式调用方法。未来我们接着开始理解设计模式中的 工厂模式"
  },
  
  {
    "title": "js设计模式-单体模式",
    "url": "/posts/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8D%95%E4%BD%93%E6%A8%A1%E5%BC%8F/",
    "categories": "js设计模式理解",
    "tags": "js基础知识",
    "date": "2023-05-11 11:49:00 +0800",
    





    
    "snippet": "单体模式单你（singleton）模式是 javascript 中最基本但又最有用的模式之一，这种模式提供了一种将代码组织为一个逻辑单元的手段，这个逻辑单元中的代码可以通过单一的变最进行访问。通过确保单体对象只存在一份实例，你就可以确信自己的所有代码使用的都是同样的全局资源.借助于单体模式，你可以把代码组织得更为一致，从而使其更容易阅读和维护。这种模式在 JavaScript 中非常重要，也...",
    "content": "单体模式单你（singleton）模式是 javascript 中最基本但又最有用的模式之一，这种模式提供了一种将代码组织为一个逻辑单元的手段，这个逻辑单元中的代码可以通过单一的变最进行访问。通过确保单体对象只存在一份实例，你就可以确信自己的所有代码使用的都是同样的全局资源.借助于单体模式，你可以把代码组织得更为一致，从而使其更容易阅读和维护。这种模式在 JavaScript 中非常重要，也许比在其他任何语言中都更重要。在网页上使用全局变量有很大的风险，而用单体对象创建的命名空间则是清除这些全局变量的最佳手段之一，他们可以划分命名空间，清除减少全局的变量数目，  用一天的时间，抽空看完一种设计模式，或者两天，还是有收获的，我们需要耐心，这个从长远来说，不算慢的。一个比较基本的单体结构如下const singleton = {  attribute1: true,  attribute2: 10,  method1: function () {},  method2: function () {}};在通用的编程开发中单体模式单体是一个只能被实例化一次并且对象访问点 . 访问的类。如果按照这个意义来说，上面这个基本结构就算不上是一个单体，因为它不是一个可以实例化的类。在 js 设计模式中，我们给它的定义，显得更广义一点，上面的也算是单体。即：单体是一个用来划分命名空间并将已批相关方法和属性组织在一起的对象，如果它可以被实例化，那么它只能被实例化一次。  对象字面量只是创建单体的一种方法，并非所有的对象字面量都是单体，如果它用来模仿关联数组或者容纳数据的话，那就显然不是单体，但是用过它是组织一些相关的属性和方法，那就可能是单体，这个取决于设计者的意图。划分命名空间命名空间，其实就是上面那个基础例子的 变量名 singleton，/* use a namespace */var myNamespace = {function1:function(id){}// ...}1.内部的成员方法不会被全局命名空间中声明的变量所改写。2.其他程序员在使用此方法时候，通过 namespace.function 去调用，大概能知道它出自哪里，它的作用3.用命名空间把类似的方法组织到一起，有助于增强代码的文档性。  命名空间还可以进一步的分割，网页上的代码，除了你写的代码，还有库代码、广告代码、徽章代码等，这些变量都会出现在全局命名空间中， 为了避免冲突，可以定义一个包含自己所有代码的全局对象/* AllNamespace */var AllNamespace = {};AllNamespace.common = {  // ...};AllNamespace.ErrorCodes = {  // ...};来源于外部代码的与 AllNamespace 变量发生冲突的可能性比较小，如果真有冲突，也会很容易发现。  虽然中小项目开发参与人员不多，变量冲突的可能比较小，养成良好的习惯还是好的，自己也会更清晰。用作特定网页专用代码的包装器单体下面是包装特定网页专用代码的单体的骨架AllNamespace.PageName = {  constant1:true,  constant2:10,  method1:function(){    // ...  },  method2:function(){    // ...  }，  init:function(){    // ...  }}拥有私用成员的单体1.使用下划线表示法AllNamespace.DataParser = {  // private method  _function1:function(str){    // ....  }  // public method  function2:function(str){    // ...  }}由于在单体中使用 this 访问单体成员有一定的风险，因为它的 this 指向可能会不是指向 AllNamespace.DataParser，当然有的 js 库可能都会有作用域矫正，代码开发中可以去使用，去调试，只不过，使用 AllNamespace.DataParser 的方法去访问单体可能会更保险一点。2.使用闭包之前的单体是这样的：MyNamespace.singleton = {};现在我们首先用自执行函数创建一个基本的单体MyNamespace.singleton = (function () {  return {    // ...  };})();有些人喜欢在匿名函数的定义之外再加一个 (),这样会更醒目，更清晰一点。 你可以把公用成员返回到那个返回的字面量对象中。MyNamespace.singleton = (function () {  return {    // ...    attribute1: true,    attribute2: 10,    method1: function () {},    method2: function () {}  };})();不要忘了，我们之所以用闭包创建单体，是因为要拥有私有成员。MyNamespace.singleton = (function () {  // private 自己用的，不是给外界访问的  let privateAttr1 = true;  let privateMethod1 = function () {    // ...  };  return {    // public    // ...    attribute1: true,    attribute2: 10,    method1: function (str) {      // maybe      // let s = privateMethod1(str);      // return s;    },    method2: function () {}  };})();  使用闭包 相比 下划线来说,前者的私用成员是不能被外界访问的，后者只是用下划线特殊标识了一下，还是可以访问到的。惰性实例化单体（懒加载实例化单体）上面讲的那些单体，脚本加载时候就会被创建出来，对于资源密集型，配置开销比较大的单体，我们可以将其实例化推迟到需要适用它的时候这种懒加载的实现方法在于，实例化时候要借助于一个静态方法。适用方法类似于： Singleton.getInstance().methodName() getInstance 方法会检查单体是否已经被实例化，如果还么有，就创建它，返回实例。如果已经实例化过，就返回现有实例。MyNamespace.singleton = (function () {  var uniqueInstance;  function constructor() {    // private 自己用的，不是给外界访问的    let privateAttr1 = true;    let privateMethod1 = function () {      // ...    };    return {      // public      // ...      attribute1: true,      attribute2: 10,      method1: function (str) {        // maybe        // let s = privateMethod1(str);        // return s;      },      method2: function () {}    };  }  return {    getInstance: function () {      if (!uniqueInstance) {        uniqueInstance = constructor();      }      return uniqueInstance;    }  };})();// 使用： MyNamespace.singleton.getInstance().method1();单体的分支MyNamespace.singleton = (function () {  let objA = {    attribute1: true,    attribute2: 10,    method1: function () {},    method2: function () {}  };  let objB = {    attribute1: true,    attribute2: 10,    method1: function () {},    method2: function () {}  };  return someCondition ? objA : objB;})();如上就是单体的两个分支。我们可以根据各种场景创建多个分支。比如我们原生的 ajax请求封装时候，就需要兼容不同版本的api.  其实我们日常工作中，前端开发代码，我们已经在不知不觉中可能使用了单体模式，而理论是一种总结，可以让我们更清晰的了解它，掌握它。单体是一种有属性有方法的一个组织，用来模仿关联数组或者容纳数据的对象不是单体。  后面将一点一点的理解掌握一些实用，常见的设计模式。。"
  },
  
  {
    "title": "富文本中的图片是base64的，导致提交数据很大，接口响应很慢",
    "url": "/posts/%E5%AF%8C%E6%96%87%E6%9C%AC%E4%B8%AD%E7%9A%84%E5%9B%BE%E7%89%87%E6%98%AFbase64%E7%9A%84-%E5%AF%BC%E8%87%B4%E6%8F%90%E4%BA%A4%E6%95%B0%E6%8D%AE%E5%BE%88%E5%A4%A7-%E5%93%8D%E5%BA%94%E5%BE%88%E6%85%A2/",
    "categories": "工作中的问题",
    "tags": "富文本",
    "date": "2023-04-28 16:37:00 +0800",
    





    
    "snippet": "富文本中的图片是base64的，导致提交数据很大，接口响应很慢富文本编辑器 图片base64太长问题前端开发人员在遇到富文本编辑器的时候，经常会被测试 或者产品提各种需求优化或者一些体验的bug ;比如：  测试会提出富文本的内容过长，限制内容，限制输入等等类似的问题： 其实为什么是富文本，就是要写文章用的，这个用户行为，是不建议给限制的。 那么测试会提 内容太长，限制字数的问题，不用想，限...",
    "content": "富文本中的图片是base64的，导致提交数据很大，接口响应很慢富文本编辑器 图片base64太长问题前端开发人员在遇到富文本编辑器的时候，经常会被测试 或者产品提各种需求优化或者一些体验的bug ;比如：  测试会提出富文本的内容过长，限制内容，限制输入等等类似的问题： 其实为什么是富文本，就是要写文章用的，这个用户行为，是不建议给限制的。 那么测试会提 内容太长，限制字数的问题，不用想，限制不了的，字数是不准确的，包括了html标签，特殊符号等等,或者会说可以使用获取text content 等各个富文本组件对应的api。但是这个只是限制了text 或者content的长度，无法限制html string 的总长度的。  —&gt; 所以直白的结论是，这个限制富文本长度，富文本限制输入的问题，90% 不是问题，就是这样的，不用解决！或者限制一个极限最大长度，但这个对文章长度限制，几乎很微弱，不如让接口直接自己做长度安全限制。  富文本中，图片的复制粘贴的时候，图片会自动转为 base64格式的。加载在提交的html字符串中，一般来说，图片大小，转为base64之后的字符长度对应的数据大小比例为 pic/base64 ~= 1/1.3 或者可能会更大。一个500kb的图片，转换之后，大概650kb靠上，而且富文本提交时候，这是直接提交到接口上的，这个对项目接口的影响太大了，正常一个接口才上传一些json数据，这个就要上传几百kb,1Mb靠上等等。  —&gt; 这样不行的，目前本人的好的解决办法有两个:                  1.使用 html-base64-img-to-upload,在富文本数据提交接口的时候，识别字符串中的含有base64图片的标签，上传到目标oss云服务，或者自己的资源服务器，然后用上传后的地址替换到字符串中                    2.使用一些富文本编辑器的扩展插件，比如vue @vueup/vue-quill 编辑器中的扩展插件 quill-image-upload-v2,基本可以解决该问题，适当有一些小问题，影响不是很大。            "
  },
  
  {
    "title": "VSCode 中组件输入点击事件 @click 后自动弹出“$event =＞”",
    "url": "/posts/VSCode-%E4%B8%AD%E7%BB%84%E4%BB%B6%E8%BE%93%E5%85%A5%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6-@click-%E5%90%8E%E8%87%AA%E5%8A%A8%E5%BC%B9%E5%87%BA-$event-=/",
    "categories": "工具、环境",
    "tags": "热门知识",
    "date": "2023-04-21 10:48:00 +0800",
    





    
    "snippet": "在 Vue 中的点击事件 @click 后会自动补全一段“$event =&gt;”，这是 VSCode 中setting.json未设置好的缘故，具体情况如下：  如上图所示：“@click=”后面自动补全“$event =&gt;”这时候 操作 ctrl+shift+p ,搜索 setting.json打开 setting.json 文件并修改以下代码即可{  \"editor.inlay...",
    "content": "在 Vue 中的点击事件 @click 后会自动补全一段“$event =&gt;”，这是 VSCode 中setting.json未设置好的缘故，具体情况如下：  如上图所示：“@click=”后面自动补全“$event =&gt;”这时候 操作 ctrl+shift+p ,搜索 setting.json打开 setting.json 文件并修改以下代码即可{  \"editor.inlayHints.enabled\":\"offUnlessPressed\"}若没有该行代码,对应添加进去就可以了"
  },
  
  {
    "title": "为什么休5天，却惹来网友骂声一片，放不起别放！这是为啥？",
    "url": "/posts/%E4%BA%94%E4%B8%80-%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%915%E5%A4%A9-%E5%8D%B4%E6%83%B9%E6%9D%A5%E7%BD%91%E5%8F%8B%E9%AA%82%E5%A3%B0%E4%B8%80%E7%89%87-%E6%94%BE%E4%B8%8D%E8%B5%B7%E5%88%AB%E6%94%BE-%E8%BF%99%E6%98%AF%E4%B8%BA%E5%95%A5/",
    "categories": "Blogging, Tutorial",
    "tags": "热门知识",
    "date": "2023-04-18 14:40:00 +0800",
    





    
    "snippet": "今天是4月18日，距离五一假期也不过两周而已，甚至两周远远不到。眼瞅着五一假期，能够美美的休息5天了，可是一些网友却不愿意了，甚至在网上口吐芬芳，这就纳闷了，好不容易能放个5天小长假，怎么会惹得如此争议？要知道早些年的时候五一放假法定节假日也不过3天而已，现在给你来回折腾，折腾出5天假期来，按理来说大家得开怀大笑，怎么感觉有点玩不起的样子？甚至还有一些网友在互联网上大放厥词，一些人就说了，这...",
    "content": "今天是4月18日，距离五一假期也不过两周而已，甚至两周远远不到。眼瞅着五一假期，能够美美的休息5天了，可是一些网友却不愿意了，甚至在网上口吐芬芳，这就纳闷了，好不容易能放个5天小长假，怎么会惹得如此争议？要知道早些年的时候五一放假法定节假日也不过3天而已，现在给你来回折腾，折腾出5天假期来，按理来说大家得开怀大笑，怎么感觉有点玩不起的样子？甚至还有一些网友在互联网上大放厥词，一些人就说了，这个假期不放也罢，你要是放不起那就别放，咱老老实实的回归3天假期。  其实啊，早些年的五一假期总的是3天假期的，再加上一个周六日就是5天假期了，那么这样，想法就来了，大家干脆前后调休一周，弄个五一七天乐好了，所以就有了“五一”7天假期的情况  那个，那个。。。，后来，7天假太长了，还是休5天吧，五一毕竟比不上国庆 ，所以法定时长由3天改回到了1天，再加上一个周六日，两天调休，“五一”5天假期的时代到来了  时间过了很久很久。。很久。。。。人们每年都过着5天的“五一”假期，其中2天是正常周六日，1天是五一放假时长，2天的前后调休时长，总的呢，就是5天。这种生活方式过了很久，终于 90后们，00后们，大家。。。觉得。。。。。。“五一”其实也就放了1天假啊，还不如不放呢！生活节奏都被调休打乱啦！。。。。按照这个节奏，我好像每个月调休一下，就能过一个”五一“小长假诶！。。于是，2023年4月18日，距离五一还有两周时间的时候，大家都在讨论着”五一”还不如不调休放1天呢，。。。。巴拉巴拉的各种激烈讨论和争论中，我想是不是会有什么轮回，终于有一天。。。五一不放假了？ 😀😀。。。。。或者人们又恢复到了 放假3天，总的调休加起来7天的轮回中。。。  ^_^"
  },
  
  {
    "title": "gpt4和chatgpt区别在哪里",
    "url": "/posts/gpt4%E5%92%8Cchatgpt%E5%8C%BA%E5%88%AB%E5%9C%A8%E5%93%AA%E9%87%8C/",
    "categories": "Blogging, Tutorial",
    "tags": "热门知识",
    "date": "2023-04-14 00:42:00 +0800",
    





    
    "snippet": "gpt4和chatgpt都是由OpenAI公司开发的自然语言处理模型，gpt4和chatgpt的区别在于gpt4可以处理图像内容，可以更正确的理解信息和处理问题，且回复的准确性提高不少；chatgpt不支持图像内容处理，有时还会出现错误或者矛盾的回答。此外，GPT-4支持图文语义化的解读，以及更好的回答组织能力，而chatgpt则带来了AI对语义理解的突破。区别一：理解和推理能力gpt4和c...",
    "content": "gpt4和chatgpt都是由OpenAI公司开发的自然语言处理模型，gpt4和chatgpt的区别在于gpt4可以处理图像内容，可以更正确的理解信息和处理问题，且回复的准确性提高不少；chatgpt不支持图像内容处理，有时还会出现错误或者矛盾的回答。此外，GPT-4支持图文语义化的解读，以及更好的回答组织能力，而chatgpt则带来了AI对语义理解的突破。区别一：理解和推理能力gpt4和chatgpt都是基于深度学习的自然语言生成模型，但是它们之间有重要的区别。利用深度学习的方法，gpt4可以进行复杂、抽象问题的思考，可以根据内容推断出例如因果关系、逻辑传递等事物内在的联系，并且可以根据给出的上下文及文意中对目标的转变事实调整应对策略，表现非常智能。而chatgpt的理解和推理能力一般，仅能进行简单的理解和推理。区别二：知识的丰富程度gpt4可以根据任意的文本输入生成各种类型的文本输出，比如文章、诗歌、对话等。gpt4的优点是它可以适应不同的领域和场景，具有很强的泛化能力和创造力。并且回答准确，有深度，它可以处理数学题、物理题，可以分析网络热门内容进行归纳和总结，也可以解读文档、漫画等内容物，解释和生成它们的含义。而chatgpt对于提出的问题则可能会出现答非所问或矛盾的回答，甚至可能生成一些不符合逻辑或不相关的内容，或者缺乏特定领域的专业知识，显得不太AI智能。区别三：视觉分析能力和应用前景gpt4拥有chatgpt所不具备的视觉分析能力，它不仅可以识别文本内容，还能够处理图像、视频等视觉性内容，可以识别、描述、生成、编辑这些视觉性内容。另外，gpt4还拥有更加广阔的应用前景，它具备人类正常水平的语言理解能力和表述能力，可以在各个领域发挥出自身价值，例如可以扮演智能助理、娱乐玩伴、学习助手、教育工具等角色。而chatgpt则仅能够在特定范围内进行有限的任务处理，不具备这种多样性、复杂性、实时性、智能化的场景应对能力。"
  },
  
  {
    "title": "设计模式",
    "url": "/posts/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",
    "categories": "js设计模式理解",
    "tags": "js基础知识",
    "date": "2023-04-11 10:10:00 +0800",
    





    
    "snippet": "js设计模式什么是设计模式？先抛开javascript不讲，单单设计模式的定义：首先，设计模式可能你在平常开发中，已经或多或少的有类似的使用过了，我们只是给他起了一个理论概念的名字-设计模式，使其理论化，变得更容易总结，学习，易于使用。就像 笔直的打出去一圈，理论上或许交 冲拳，类似的道理；就像蔬菜我们一直在吃，现在我们要知道它是什么蔬菜，含有什么元素，具有什么功效。把它升级到理论总结，就变...",
    "content": "js设计模式什么是设计模式？先抛开javascript不讲，单单设计模式的定义：首先，设计模式可能你在平常开发中，已经或多或少的有类似的使用过了，我们只是给他起了一个理论概念的名字-设计模式，使其理论化，变得更容易总结，学习，易于使用。就像 笔直的打出去一圈，理论上或许交 冲拳，类似的道理；就像蔬菜我们一直在吃，现在我们要知道它是什么蔬菜，含有什么元素，具有什么功效。把它升级到理论总结，就变成了有用的知识，方便科学的使用。设计模式是指在软件设计中，被反复使用的一种代码设计经验。使用设计模式的目的是为了可重用代码，提高代码的可扩展性和可维护性学习设计模式，关键是学习设计思想，不能简单地生搬硬套，也不能为了使用设计模式而过度设计，要合理平衡设计的复杂度和灵活性，并意识到设计模式也并不是万能的。设计模式不单单是适用于javascript语言中的，它是一种理念，思路，解决方法，在其他程序应用中也同样适用。设计模式分类设计模式分为三种类型，共23种。创建型模式：单例模式、抽象工厂模式、建造者模式、工厂模式、原型模式。结构型模式：适配器模式、桥接模式、装饰模式、组合模式、外观模式、享元模式、代理模式。行为型模式：模版方法模式、命令模式、迭代器模式、观察者模式、中介者模式、备忘录模式、解释器模式（Interpreter模式）、状态模式、策略模式、职责链模式(责任链模式)、访问者模式。  后面将一点一点的理解掌握一些实用，常见的设计模式。。"
  },
  
  {
    "title": "js  JSON.parse解析出来会丢失函数类型的元素",
    "url": "/posts/JSON.parse%E8%A7%A3%E6%9E%90%E5%87%BA%E6%9D%A5%E4%BC%9A%E4%B8%A2%E5%A4%B1%E5%87%BD%E6%95%B0%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%85%83%E7%B4%A0/",
    "categories": "js踩坑日记",
    "tags": "js基础知识",
    "date": "2022-08-03 11:20:00 +0800",
    





    
    "snippet": "JSON.parse解析出来会丢失函数类型的元素这个问题是在一次数据处理时候发现的，一个小坑，记录一下调试工具演示结果如下：",
    "content": "JSON.parse解析出来会丢失函数类型的元素这个问题是在一次数据处理时候发现的，一个小坑，记录一下调试工具演示结果如下："
  },
  
  {
    "title": "博客添加百度统计",
    "url": "/posts/%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1/",
    "categories": "Blogging, Tutorial",
    "tags": "博客",
    "date": "2022-05-15 11:12:00 +0800",
    





    
    "snippet": "现在有很多站长工具可以统计网站的点击量。添加方式大同小异。我添加的是 百度统计。注册添加后，会得到最新版的统计代码&lt;script&gt;var _hmt = _hmt || [];(function() {  var hm = document.createElement(\"script\");  hm.src = \"https://hm.baidu.com/hm.js?6b1bc98e...",
    "content": "现在有很多站长工具可以统计网站的点击量。添加方式大同小异。我添加的是 百度统计。注册添加后，会得到最新版的统计代码&lt;script&gt;var _hmt = _hmt || [];(function() {  var hm = document.createElement(\"script\");  hm.src = \"https://hm.baidu.com/hm.js?6b1bc98e5849783639bc900dd30b6240\";  var s = document.getElementsByTagName(\"script\")[0];   s.parentNode.insertBefore(hm, s);})();&lt;/script&gt;需要将这段代码添加到网站全部页面的head标签前建议在header.htm类似的页头模板页面中安装，以达到一处安装，全站皆有的效果。如果代码安装正确，一般20分钟后，可以查看网站分析数据在百度统计的网站中心tab中检查首页代码状态，显示代码安装正确，就成功了代码安装完成后，您可以在“代码安装检查”页面自动检测或手动检测代码安装情况  春天是美好的季节"
  },
  
  {
    "title": "今日热搜",
    "url": "/posts/%E4%BB%8A%E6%97%A5%E7%83%AD%E6%90%9C%E7%9C%8B%E7%82%B9/",
    "categories": "Blogging, Tutorial",
    "tags": "新闻",
    "date": "2022-04-11 10:10:00 +0800",
    





    
    "snippet": "今日百度热搜四川泸州一酒厂发生火灾造成4人死亡沙尘暴趁夜入京:口罩挡不住行人吃土两女子为吃自助餐回本被行拘女司机撞人拖行案受害方拒签谅解书男子潜入女邻居房间 称被香气迷住",
    "content": "今日百度热搜四川泸州一酒厂发生火灾造成4人死亡沙尘暴趁夜入京:口罩挡不住行人吃土两女子为吃自助餐回本被行拘女司机撞人拖行案受害方拒签谅解书男子潜入女邻居房间 称被香气迷住"
  },
  
  {
    "title": "Enable Google Page Views",
    "url": "/posts/enable-google-pv/",
    "categories": "Blogging, Tutorial",
    "tags": "google analytics, pageviews",
    "date": "2021-01-04 07:32:00 +0800",
    





    
    "snippet": "  The content of this post applies only to Universal Analytics property (UA), not Google Analytics 4 (GA 4). In addition, since UA is about to be deprecated on Jul 1, 2023, the Page Views feature o...",
    "content": "  The content of this post applies only to Universal Analytics property (UA), not Google Analytics 4 (GA 4). In addition, since UA is about to be deprecated on Jul 1, 2023, the Page Views feature of Chirpy will also be deprecated at that time.This post is to enable Page Views on the Chirpy theme based blog that you just built. This requires technical knowledge and it’s recommended to keep the google_analytics.pv.* empty unless you have a good reason. If your website has low traffic, the page views count would discourage you to write more blogs. With that said, let’s start with the setup.Set up Google AnalyticsCreate GA account and propertyFirst, you need to set up your account on Google analytics. While you create your account, you must create your first Property as well.  Head to https://analytics.google.com/ and click on Start Measuring  Enter your desired Account Name and choose the desired checkboxes  Enter your desired Property Name. This is the name of the tracker project that appears on your Google Analytics dashboard  Enter the required information About your business  Hit Create and accept any license popup to set up your Google Analytics account and create your propertyCreate Data StreamWith your property created, you now need to set up Data Stream to track your blog traffic. After you signup, the prompt should automatically take you to create your first Data Stream. If not, follow these steps:  Go to Admin on the left column  Select the desired property from the drop-down on the second column  Click on Data Streams  Add a stream and click on Web  Enter your blog’s URLIt should look like this:Now, click on the new data stream and grab the Measurement ID. It should look something like G-V6XXXXXXXX. Copy this to your _config.yml file:google_analytics:  id: 'G-V6XXXXXXX'   # fill in your Google Analytics ID  # Google Analytics pageviews report settings  pv:    proxy_endpoint:   # fill in the Google Analytics superProxy endpoint of Google App Engine    cache_path:       # the local PV cache data, friendly to visitors from GFW regionWhen you push these changes to your blog, you should start seeing the traffic on your Google Analytics. Play around with the Google Analytics dashboard to get familiar with the options available as it takes like 5 mins to pick up your changes. You should now be able to monitor your traffic in real time.Setup Page ViewsThere is a detailed tutorial available to set up Google Analytics superProxy. But, if you are interested to just quickly get your Chirpy-based blog display page views, follow along. These steps were tested on a Linux machine. If you are running Windows, you can use the Git bash terminal to run Unix-like commands.Setup Google App Engine      Visit https://console.cloud.google.com/appengine        Click on Create Application        Click on Create Project        Enter the name and choose the data center close to you        Select Python language and Standard environment        Enable billing account. Yeah, you have to link your credit card. But, you won’t be billed unless you exceed your free quota. For a simple blog, the free quota is more than sufficient.        Go to your App Engine dashboard on your browser and select API &amp; Services from the left navigation menu        Click on Enable APIs and Services button on the top        Enable the following APIs: Google Analytics API        On the left, Click on OAuth Consent Screen and accept Configure Consent Screen. Select External since your blog is probably hosted for the public. Click on Publish under Publishing Status        Click on Credentials on the left and create a new OAuth Client IDs credential. Make sure to add an entry under Authorized redirect URIs that matches: https://&lt;project-id&gt;.&lt;region&gt;.r.appspot.com/admin/auth        Note down the Your Client ID and Your Client Secret. You’ll need this in the next section.        Download and install the cloud SDK for your platform: https://cloud.google.com/sdk/docs/quickstart        Run the following commands:    [root@bc96abf71ef8 /]# gcloud init~snip~Go to the following link in your browser:    https://accounts.google.com/o/oauth2/auth?response_type=code&amp;client_id=XYZ.apps.googleusercontent.com&amp;redirect_uri=ABCDEFGEnter verification code: &lt;VERIFICATION CODE THAT YOU GET AFTER YOU VISIT AND AUTHENTICATE FROM THE ABOVE LINK&gt;You are logged in as: [blah_blah@gmail.com].Pick cloud project to use:[1] chirpy-test-300716[2] Create a new projectPlease enter numeric choice or text value (must exactly match listitem): 1[root@bc96abf71ef8 /]# gcloud info# Your selected project info should be displayed here      Setup Google Analytics superProxy      Clone the Google Analytics superProxy project on Github: https://github.com/googleanalytics/google-analytics-super-proxy to your local.        Remove the first 2 lines in the src/app.yaml file:    - application: your-project-id- version: 1            In src/config.py, add the OAUTH_CLIENT_ID and OAUTH_CLIENT_SECRET that you gathered from your App Engine Dashboard.        Enter any random key for XSRF_KEY, your config.py should look similar to this    #!/usr/bin/python2.7__author__ = 'pete.frisella@gmail.com (Pete Frisella)'# OAuth 2.0 Client SettingsAUTH_CONFIG = {  'OAUTH_CLIENT_ID': 'YOUR_CLIENT_ID',  'OAUTH_CLIENT_SECRET': 'YOUR_CLIENT_SECRET',  'OAUTH_REDIRECT_URI': '%s%s' % (    'https://chirpy-test-XXXXXX.ue.r.appspot.com',    '/admin/auth'  )}# XSRF SettingsXSRF_KEY = 'OnceUponATimeThereLivedALegend'              You can configure a custom domain instead of https://PROJECT_ID.REGION_ID.r.appspot.com.But, for the sake of keeping it simple, we will be using the Google provided default URL.            From inside the src/ directory, deploy the app    [root@bc96abf71ef8 src]# gcloud app deployServices to deploy:descriptor:      [/tmp/google-analytics-super-proxy/src/app.yaml]source:          [/tmp/google-analytics-super-proxy/src]target project:  [chirpy-test-XXXX]target service:  [default]target version:  [VESRION_NUM]target url:      [https://chirpy-test-XXXX.ue.r.appspot.com]Do you want to continue (Y/n)? YBeginning deployment of service [default]...╔════════════════════════════════════════════════════════════╗╠═ Uploading 1 file to Google Cloud Storage                 ═╣╚════════════════════════════════════════════════════════════╝File upload done.Updating service [default]...done.Setting traffic split for service [default]...done.Deployed service [default] to [https://chirpy-test-XXXX.ue.r.appspot.com]You can stream logs from the command line by running:$ gcloud app logs tail -s defaultTo view your application in the web browser run:$ gcloud app browse            Visit the deployed service. Add a /admin to the end of the URL.        Click on Authorize Users and make sure to add yourself as a managed user.        If you get any errors, please Google it. The errors are self-explanatory and should be easy to fix.  If everything went good, you’ll get this screen:Create Google Analytics QueryHead to https://PROJECT_ID.REGION_ID.r.appspot.com/admin and create a query after verifying the account. GA Core Reporting API query request can be created in Query Explorer.The query parameters are as follows:  start-date: fill in the first day of blog posting  end-date: fill in today (this is a parameter supported by GA Report, which means that it will always end according to the current query date)  metrics: select ga:pageviews  dimensions: select ga:pagePathIn order to reduce the returned results and reduce the network bandwidth, we add custom filtering rules 1:      filters: fill in ga:pagePath=~^/posts/.*/$;ga:pagePath!@=.    Among them, ; means using logical AND to concatenate two rules.    If the site.baseurl is specified, change the first filtering rule to ga:pagePath=~^/BASE_URL/posts/.*/$, where BASE_URL is the value of site.baseurl.  After Run Query, copy the generated contents of API Query URI at the bottom of the page and fill in the Encoded URI for the query of SuperProxy on GAE.After the query is saved on GAE, a Public Endpoint (public access address) will be generated, and we will get the query result in JSON format when accessing it. Finally, click Enable Endpoint in Public Request Endpoint to make the query effective, and click Start Scheduling in Scheduling to start the scheduled task.Configure Chirpy to Display Page ViewOnce all the hard part is done, it is very easy to enable the Page View on Chirpy theme. Your superProxy dashboard should look something like below and you can grab the required values.Update the _config.yml file of Chirpy project with the values from your dashboard, to look similar to the following:google_analytics:  id: 'G-V6XXXXXXX'   # fill in your Google Analytics ID  pv:    proxy_endpoint: 'https://PROJECT_ID.REGION_ID.r.appspot.com/query?id=&lt;ID FROM SUPER PROXY&gt;'    cache_path:       # the local PV cache data, friendly to visitors from GFW regionNow, you should see the Page View enabled on your blog.Reference            Google Analytics Core Reporting API: Filters &#8617;      "
  },
  
  {
    "title": "Customize the Favicon",
    "url": "/posts/customize-the-favicon/",
    "categories": "Blogging, Tutorial",
    "tags": "favicon",
    "date": "2019-08-11 00:34:00 +0800",
    





    
    "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons...",
    "content": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.Download &amp; ReplaceDownload the generated package, unzip and delete the following two from the extracted files:  browserconfig.xml  site.webmanifestAnd then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.The following table will help you understand the changes to the favicon files:            File(s)      From Online Tool      From Chirpy                  *.PNG      ✓      ✗              *.ICO      ✓      ✗        ✓ means keep, ✗ means delete.The next time you build the site, the favicon will be replaced with a customized edition."
  },
  
  {
    "title": "Getting Started",
    "url": "/posts/getting-started/",
    "categories": "Blogging, Tutorial",
    "tags": "getting started",
    "date": "2019-08-09 20:55:00 +0800",
    





    
    "snippet": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of the basic environment. Git also needs to be installed.InstallationCreating a New SiteThere are two ways to cr...",
    "content": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of the basic environment. Git also needs to be installed.InstallationCreating a New SiteThere are two ways to create a new repository for this theme:  Using the Chirpy Starter - Easy to upgrade, isolates irrelevant project files so you can focus on writing.  GitHub Fork - Convenient for custom development, but difficult to upgrade. Unless you are familiar with Jekyll and are determined to tweak or contribute to this project, this approach is not recommended.Option 1. Using the Chirpy StarterSign in to GitHub and browse to Chirpy Starter, click the button Use this template &gt; Create a new repository, and name the new repository USERNAME.github.io, where USERNAME represents your GitHub username.Option 2. GitHub ForkSign in to GitHub to fork Chirpy, and then rename it to USERNAME.github.io (USERNAME means your username).Next, clone your site to local machine. In order to build JavaScript files later, we need to install Node.js, and then run the tool:$ bash tools/init  If you don’t want to deploy your site on GitHub Pages, append option --no-gh at the end of the above command.The above command will:  Check out the code to the latest tag (to ensure the stability of your site: as the code for the default branch is under development).  Remove non-essential sample files and take care of GitHub-related files.  Build JavaScript files and export to assets/js/dist/, then make them tracked by Git.  Automatically create a new commit to save the changes above.Installing DependenciesBefore running local server for the first time, go to the root directory of your site and run:$ bundleUsageConfigurationUpdate the variables of _config.yml as needed. Some of them are typical options:  url  avatar  timezone  langCustomizing StylesheetIf you need to customize the stylesheet, copy the theme’s assets/css/style.scss to the same path on your Jekyll site, and then add the custom style at the end of it.Starting with version 4.1.0, if you want to overwrite the SASS variables defined in _sass/addon/variables.scss, copy the main sass file _sass/jekyll-theme-chirpy.scss into the _sass directory in your site’s source, then create a new file _sass/variables-hook.scss and assign new value.Customing Static AssetsStatic assets configuration was introduced in version 5.1.0. The CDN of the static assets is defined by file _data/assets/cross_origin.yml, and you can replace some of them according to the network conditions in the region where your website is published.Also, if you’d like to self-host the static assets, please refer to the chirpy-static-assets.Running Local ServerYou may want to preview the site contents before publishing, so just run it by:$ bundle exec jekyll sOr run the site on Docker with the following command:$ docker run -it --rm \\    --volume=\"$PWD:/srv/jekyll\" \\    -p 4000:4000 jekyll/jekyll \\    jekyll serveAfter a few seconds, the local service will be published at http://127.0.0.1:4000.DeploymentBefore the deployment begins, check out the file _config.yml and make sure the url is configured correctly. Furthermore, if you prefer the project site and don’t use a custom domain, or you want to visit your website with a base URL on a web server other than GitHub Pages, remember to change the baseurl to your project name that starts with a slash, e.g, /project-name.Now you can choose ONE of the following methods to deploy your Jekyll site.Deploy by Using GitHub ActionsThere are a few things to get ready for.  If you’re on the GitHub Free plan, keep your site repository public.      If you have committed Gemfile.lock to the repository, and your local machine is not running Linux, go the the root of your site and update the platform list of the lock-file:    $ bundle lock --add-platform x86_64-linux      Next, configure the Pages service.      Browse to your repository on GitHub. Select the tab Settings, then click Pages in the left navigation bar. Then, in the Source section (under Build and deployment), select GitHub Actions from the dropdown menu.        Push any commits to GitHub to trigger the Actions workflow. In the Actions tab of your repository, you should see the workflow Build and Deploy running. Once the build is complete and successful, the site will be deployed automatically.  At this point, you can go to the URL indicated by GitHub to access your site.Manually Build and DeployOn self-hosted servers, you cannot enjoy the convenience of GitHub Actions. Therefore, you should build the site on your local machine and then upload the site files to the server.Go to the root of the source project, and build your site as follows:$ JEKYLL_ENV=production bundle exec jekyll bOr build the site on Docker:$ docker run -it --rm \\    --env JEKYLL_ENV=production \\    --volume=\"$PWD:/srv/jekyll\" \\    jekyll/jekyll \\    jekyll buildUnless you specified the output path, the generated site files will be placed in folder _site of the project’s root directory. Now you should upload those files to the target server."
  },
  
  {
    "title": "Writing a New Post",
    "url": "/posts/write-a-new-post/",
    "categories": "Blogging, Tutorial",
    "tags": "writing",
    "date": "2019-08-08 14:10:00 +0800",
    





    
    "snippet": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.Naming and P...",
    "content": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG]     # TAG names should always be lowercase---  The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateIn order to accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:Adding author information in _data/authors.yml (If your website doesn’t have this file, don’t hesitate to create one).&lt;author_id&gt;:  name: &lt;full name&gt;  twitter: &lt;twitter_of_author&gt;  url: &lt;homepage_of_author&gt;And then use author to specify a single entry or authors to specify multiple entries:---author: &lt;author_id&gt;                     # for single entry# orauthors: [&lt;author1_id&gt;, &lt;author2_id&gt;]   # for multiple entries---Having said that, the key author can also identify multiple entries.  The benefit of reading the author information from the file _data/authors.yml is that the page will have the meta tag twitter:creator, which enriches the Twitter Cards and is good for SEO.Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:---toc: false---CommentsThe global switch of comments is defined by variable comments.active in the file _config.yml. After selecting a comment system for this variable, comments will be turned on for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MathematicsFor website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---MermaidMermaid is a great diagrams generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.ImagesCaptionAdd italics to the next line of an image，then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeIn order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image.![Desktop View](/assets/img/sample/mockup.png){: width=\"700\" height=\"400\" }  For an SVG, you have to at least specify its width, otherwise it won’t be rendered.Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:![Desktop View](/assets/img/sample/mockup.png){: w=\"700\" h=\"400\" }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right.  Once the position is specified, the image caption should not be added.      Normal position    Image will be left aligned in below sample:    ![Desktop View](/assets/img/sample/mockup.png){: .normal }            Float to the left    ![Desktop View](/assets/img/sample/mockup.png){: .left }            Float to the right    ![Desktop View](/assets/img/sample/mockup.png){: .right }      Dark/Light modeYou can make images follow theme preferences in dark/light mode. This requires you to prepare two images, one for dark mode and one for light mode, and then assign them a specific class (dark or light):![Light mode only](/path/to/light-mode.png){: .light }![Dark mode only](/path/to/dark-mode.png){: .dark }ShadowThe screenshots of the program window can be considered to show the shadow effect:![Desktop View](/assets/img/sample/mockup.png){: .shadow }CDN URLIf you host the images on the CDN, you can save the time of repeatedly writing the CDN URL by assigning the variable img_cdn of _config.yml file:img_cdn: https://cdn.comOnce img_cdn is assigned, the CDN URL will be added to the path of all images (images of site avatar and posts) starting with /.For instance, when using images:![The flower](/path/to/flower.png)The parsing result will automatically add the CDN prefix https://cdn.com before the image path:&lt;img src=\"https://cdn.com/path/to/flower.png\" alt=\"The flower\"&gt;Image PathWhen a post contains many images, it will be a time-consuming task to repeatedly define the path of the images. To solve this, we can define this path in the YAML block of the post:---img_path: /img/path/---And then, the image source of Markdown can write the file name directly:![The flower](flower.png)The output will be:&lt;img src=\"/img/path/flower.png\" alt=\"The flower\"&gt;Preview ImageIf you want to add an image at the top of the post, please provide an image with a resolution of 1200 x 630. Please note that if the image aspect ratio does not meet 1.91 : 1, the image will be scaled and cropped.Knowing these prerequisites, you can start setting the image’s attribute:---image:  path: /path/to/image  alt: image alternative text---Note that the img_path can also be passed to the preview image, that is, when it has been set, the  attribute path only needs the image file name.For simple use, you can also just use image to define the path.---image: /path/to/image---LQIPFor preview images:---image:  lqip: /path/to/lqip-file # or base64 URI---  You can observe LQIP in the preview image of post Text and Typography.For normal images:![Image description](/path/to/image){: lqip=\"/path/to/lqip-file\" }Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:&gt; Example line for prompt.{: .prompt-info }SyntaxInline Code`inline code part`Filepath Hightlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value```  The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:```shellecho 'No more line numbers!'```{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=\"path/to/file\" }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains 'Pack' %}  This product's title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.VideosYou can embed a video with the following syntax:{% include embed/{Platform}.html id='{ID}' %}Where Platform is the lowercase of the platform name, and ID is the video ID.The following table shows how to get the two parameters we need in a given video URL, and you can also know the currently supported video platforms.            Video URL      Platform      ID                  https://www.youtube.com/watch?v=H-B46URT4mg      youtube      H-B46URT4mg              https://www.twitch.tv/videos/1634779211      twitch      1634779211      Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts."
  },
  
  {
    "title": "Text and Typography",
    "url": "/posts/text-and-typography/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2019-08-08 11:33:00 +0800",
    





    
    "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 ...",
    "content": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 - headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risus, sit amet vulputate urna facilisis ac. Phasellus semper dui non purus ultrices sodales. Aliquam ante lorem, ornare a feugiat ac, finibus nec mauris. Vivamus ut tristique nisi. Sed vel leo vulputate, efficitur risus non, posuere mi. Nullam tincidunt bibendum rutrum. Proin commodo ornare sapien. Vivamus interdum diam sed sapien blandit, sit amet aliquam risus mattis. Nullam arcu turpis, mollis quis laoreet at, placerat id nibh. Suspendisse venenatis eros eros.ListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    ToDo list  Job          Step 1      Step 2      Step 3      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line shows the block quote.Prompts  An example showing the tip type prompt.  An example showing the info type prompt.  An example showing the warning type prompt.  An example showing the danger type prompt.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blocksCommonThis is a common code snippet, without syntax highlight and line number.Specific Languageif [ $? -ne 0 ]; then  echo \"The command was not successful.\";  #do the needful / exitfi;Specific filename@import  \"colors/light-typography\",  \"colors/dark-typography\"MathematicsThe mathematics powered by MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dImagesDefault (with caption)Full screen width and center alignmentLeft alignedFloat to leftPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Float to rightPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Dark/Light mode &amp; ShadowThe image below will toggle dark/light mode based on theme preference, notice it has shadows.VideoReverse Footnote            The footnote source &#8617;              The 2nd footnote source &#8617;      "
  }
  
]

